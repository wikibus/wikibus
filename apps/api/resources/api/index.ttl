PREFIX dash: <http://datashapes.org/dash#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX sh: <http://www.w3.org/ns/shacl#>
prefix hyper-query: <https://hypermedia.app/query#>
prefix hydra: <http://www.w3.org/ns/hydra/core#>

<>
  a hydra:ApiDocumentation ;
  hydra:entrypoint <../> ;
.

<>
  hydra:collection
    [
      # Because it's awkward to load the representation of /api/shapes
      # it is weakly linked to the actual resource
      schema:sameAs </api/shapes> ;
      hydra:manages
        [
          hydra:property rdf:type ;
          hydra:object sh:NodeShape ;
        ]
    ] ;
.

sh:NodeShape
  a hydra:Class ;
  hydra:apiDocumentation <> ;
  hyper-query:include _:NodeShapeInclude ;
.

</api/ShapesCollection>
  a hydra:Class ;
  hydra:apiDocumentation <> ;
  hyper-query:memberInclude _:NodeShapeInclude ;
.

_:NodeShapeInclude
  hyper-query:path
    (
      # ((sh:and|sh:xone|sh:or)/rdf:rest*)/rdf:first/(sh:property/sh:group)?
      [ sh:alternativePath ( sh:and sh:xone sh:or ) ]
      [ sh:zeroOrMorePath rdf:rest ]
      rdf:first
      [ sh:zeroOrOnePath ( sh:property sh:group ) ]
    ) ,
    (
      # (((sh:and|sh:xone|sh:or)/rdf:rest*)/rdf:first)?/(sh:property/sh:group)?
      [
        sh:zeroOrOnePath
          (
            [ sh:alternativePath ( sh:and sh:xone sh:or ) ]
            [ sh:zeroOrMorePath rdf:rest ]
            rdf:first
          )
      ]
      [ sh:zeroOrOnePath ( sh:property sh:group ) ]
    )
.
