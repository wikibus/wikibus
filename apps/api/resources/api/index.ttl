PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX dash: <http://datashapes.org/dash#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX sh: <http://www.w3.org/ns/shacl#>
prefix hyper-query: <https://hypermedia.app/query#>
prefix hydra: <http://www.w3.org/ns/hydra/core#>
prefix knossos: <https://hypermedia.app/knossos#>
PREFIX code: <https://code.described.at/>

<>
  a hydra:ApiDocumentation ;
  hydra:entrypoint <../> ;
.

sh:NodeShape
  a hydra:Class ;
  hydra:apiDocumentation <> ;
  hyper-query:include _:NodeShapeInclude ;
.

</api/ShapesCollection>
  hyper-query:memberInclude _:NodeShapeInclude ;
.

_:NodeShapeInclude
  hyper-query:path
    [ sh:zeroOrMorePath owl:imports ]
.

schema:WebPage
  a hydra:Class ;
  hydra:apiDocumentation <> ;
  hydra:supportedOperation
    [
      hydra:method "GET" ;
      code:implementedBy
        [
          a code:EcmaScript ;
          code:link <node:@hydrofoil/labyrinth/resource#get> ;
        ] ;
      knossos:beforeSend
        [
          code:implementedBy
            [
              a code:EcmaScript ;
              code:link <node:@hydrofoil/creta-labs/cache#setHeaders> ;
            ] ;
          code:arguments
            [
              code:name "cache-control" ;
              code:value "max-age=86400, stale-while-revalidate=120" ;
            ],
            [
              code:name "etag" ;
              code:value true ;
            ] ;
        ] ;
    ] ;
  hyper-query:include
    [
    # schema:isBasedOn/(dash:shape|schema:hasPart)*
      hyper-query:path
        (
          schema:isBasedOn
          [ sh:zeroOrMorePath [ sh:alternativePath ( dash:shape schema:hasPart ) ] ]
        )
    ],
    [
    # schema:hasPart*
      hyper-query:path
        [ sh:zeroOrMorePath schema:hasPart ]
    ] ;
  knossos:preprocessResponse
    [
      code:implementedBy
        [
          a code:EcmaScriptModule ;
          code:link <file:apps/api/lib/schema/WebPage.js#preserveAndForwardQuery> ;
        ] ;
    ] ;
.

knossos:TemplatedResource
  a hydra:Class ;
  rdfs:subClassOf schema:WebPage ;
  hydra:apiDocumentation <> ;
  knossos:preprocessResponse
    [
      code:implementedBy
        [
          a code:EcmaScriptModule ;
          code:link <file:apps/api/lib/TemplatedResource.js#fillTemplate> ;
        ] ;
    ] ;
  hydra:supportedOperation
    [
      hydra:method "GET" ;
      code:implementedBy
        [
          a code:EcmaScript ;
          code:link <node:@hydrofoil/labyrinth/resource#get> ;
        ] ;
      knossos:beforeSend
        [
          code:implementedBy
            [
              a code:EcmaScript ;
              code:link <node:@hydrofoil/creta-labs/cache#setHeaders> ;
            ] ;
          code:arguments
            [
              code:name "cache-control" ;
              code:value "max-age=0, stale-while-revalidate=3600"
            ],
            [
              code:name "etag" ;
              code:value true ;
            ] ;
        ] ;
    ] ;
.
